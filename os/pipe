Write a C program that illustrates how to execute two 
commands concurrently with a command pipe.
Ex: - ls –l | sort

#include<stdio.h>
#include<stdlib.h>
#include <unistd.h>
void main(int argc, char *argv[])
{
 int fd[2],pid,k;
 k=pipe(fd);
if(k==-1)
 {
 perror("pipe"); exit(1);
 }
 pid=fork();
 if(pid==0)
 {
 close(fd[0]); dup2(fd[1],1);
 close(fd[1]); execlp(argv[1],argv[1],NULL);
 perror("exec1");
 }
 else
 {
 wait(2);
 close(fd[1]); dup2(fd[0],0);
 close(fd[0]);
 execlp(argv[2],argv[2],NULL);
 perror("exec1");
}
}

                                                  (or)

#include <stdio.h> 
#include <unistd.h> 
#include <sys/types.h> 
#include <stdlib.h> 
int main()
{
int pfds[2];
char buf[30];
if(pipe(pfds)==-1
{
perror("pipe failed");
exit(1);
}
if(!fork())
{
close(1);
dup(pfds[1];
system (“ls –l”);
}
else
{
printf("parent reading from pipe \n");
while(read(pfds[0],buf,80))
printf("%s \n" ,buf);
}
}




OUTPUT:
[dmgv@LinuxServer ~]$ cc filename.c
[dmgv@LinuxServer ~]$ ./a.out
Parent reading from pipe
Total 24
-rwxrwxr-x l student student 5563Aug 3 10:39 a.out
-rw-rw-r—l
Student student 340 jul 27 10:45 pipe2.c
-rw-rw-r—l student student
Pipes2.c
-rw-rw-r—l student student 401 34127 10:27 pipe2.c
student
